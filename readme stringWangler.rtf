{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 stringWangler.py\
\
The purposes of this program is to convert the base model (in the form of an antimony string) into a new model (also in the form of an antimony string) that ensures the model receives it\'92s \'91stimulation\'92 only when it has achieved a stable state and that outputs for parameter estimation are measured relative to that moment of stimulation.\
\
package dependancies: json, sympy, itertools, re\
\
use example:\
python stringWangler.py antStr:model_in.txt stabAdj:config_sw.json outStr:model_out.txt\
\
In addition to an antimony input file (eg model_in.txt) a configuration file (eg config_sw.json) is required to produce the output file (model_out.txt) all of which should be in the same directory as stringWangler.py\
\
The process of modifying the file is only semi automated. If you provide it with the necessary ordering of steps the code will attempt to analytically infer some initial conditions to ensure some variables of the model begin with 0 derivative (with respect to time). It\'92s our experience that doing this reduces the amount of time the model needs to achieve a stable state improving the computational speed of the model.\
\
The configuration file is in a json format. For example it might look like\
\{\
  "simp":\{"Stim":0\},\
  "ODEcull":["A","B"],\
  "totalSubs":\{"A":"A_T-Ap",\
               "B":"B_T-Bp"\},\
  "solSteps":[\{"eqs":["Ap"],\
               "sols":["Ap"],\
               "retain":["Bp"]\}],\
  "guessConstraints":\{"B_T":["B","Bp"]\},\
  "varToTrack":["A_wb", "Ap_wb", "B_wb", "Bp_wb"],\
  "stimulation":\{"Stim":1\},\
  "preStim":\{"Stim":0\},\
  "times":[0, 4, 8, 12, 16, 20],\
  "stabMod":\{"A":"A_T", "Ap":"A_T", "B":"B_T", "Bp":"B_T"\}\
\}\
\
simp: a dictionary of simplifications that can be applied to the stable state equations for the model to simplify the attempt to analytically find a stable state. Typically this is just an assertion of the pre stimulation conditions.\
\
ODEcull: if parts of the model are conservative, that is some variables sum to a constant total, then some of the ODEs and associated stable state equations will be redundant. This list tells the program which ODE\'92s it should disregard when attempting to analytically find a stable state.\
\
totalSubs: Where part of a model is conservative (variables some to a constant) that constant is in effect a hidden parameter of the system and must be explicitly introduced to compensate for the redundant ODE\'92s removed in ODEcull. this dictionary of sympy expressions that include this new constant is substituted in place of those variables who\'92s ODE\'92s have been removed.\
\
solSteps: a list of steps to take in order to attempt to solve (or partially solve) the stable state of the model analytically. Each step lists a set of equations \'93eqs\'94 to attempt to solve for the variables listed in \'93sols\'94. In the process the answer will have simplifying substitutions inserted to keep mathematical expressions tractable for sympy. To avoid a variable being substituted out (because it will be needed for a future manipulation) it can be added to the steps \'93retain\'94 list. If there is a unique answer it will be substituted into the remaining equations for the next step. If not the program should produce an error.\
\
guessConstraints: If the initial condition of a variable can not be set analytically it must be guessed. This is problematic because those variables are generally still subject to constraints, sometimes multiple constraints. For example a protein complex who\'92s sub components are conserved will find it self subject to a constraint for each sub component. The initial guess must be physically consistent with these constraints to avoid negative concentrations. This dictionary provides new constraint variables (for example the abundance of a conserved protein that may form a complex) and a list of the variables in the model that should sum to this constraint.\
\
varToTrack: The model ensures variables are measured relative to the point of stimulation by storing their values in dummy parameters. You must indicate which variables (or more usually assignments) you want stored.\
\
stimulation: you should define the state of the system upon stimulation by providing a dictionary of parameters with their stimulation values.\
\
preStim: a dictionary of the parameter values that represent the pre stimulation state of the system.\
\
times: as previously mentioned the model uses dummy parameters to capture the state of the model at time points relative to the point of stimulation. This list defines the time points to be captured. It\'92s important this list be \'91in order\'92 smallest to largest.\
\
stabMod: the stability condition can and often should be modified to ensure that very low protein abundance isn\'92t used (by a parameter estimator) to escape the stabilisation constraint. this dictionary allows to you provide the stabilisation constraint with a modifier expression. The smaller the expression the tighter the constrain for that ODE. Generally when an ODE relates to a conserved quantity it\'92s easiest to offer that quantity as a modifier.}